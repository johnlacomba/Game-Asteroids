{"ast":null,"code":"var _jsxFileName = \"/Users/jlacomba/Game-Asteroids/react-asteroids-game/src/core/gameEngine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { generateRandomAsteroids } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameEngine = () => {\n  _s();\n  const [player, setPlayer] = useState({\n    x: 0,\n    y: 0,\n    bullets: []\n  });\n  const [asteroids, setAsteroids] = useState([]);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    const initialAsteroids = generateRandomAsteroids();\n    setAsteroids(initialAsteroids);\n  }, []);\n  const updateGame = () => {\n    // Update player position, bullets, and asteroids\n    // Handle collisions and scoring\n  };\n  const handleCollision = () => {\n    // Logic for handling collisions between bullets and asteroids\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(GameEngine, \"f0z45IV90cVJOxe9kt2jhpYa2Nk=\");\n_c = GameEngine;\nexport default GameEngine;\nvar _c;\n$RefreshReg$(_c, \"GameEngine\");","map":{"version":3,"names":["React","useState","useEffect","generateRandomAsteroids","jsxDEV","_jsxDEV","GameEngine","_s","player","setPlayer","x","y","bullets","asteroids","setAsteroids","score","setScore","initialAsteroids","updateGame","handleCollision","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jlacomba/Game-Asteroids/react-asteroids-game/src/core/gameEngine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { generateRandomAsteroids } from './utils';\n\nconst GameEngine = () => {\n    const [player, setPlayer] = useState({ x: 0, y: 0, bullets: [] });\n    const [asteroids, setAsteroids] = useState([]);\n    const [score, setScore] = useState(0);\n\n    useEffect(() => {\n        const initialAsteroids = generateRandomAsteroids();\n        setAsteroids(initialAsteroids);\n    }, []);\n\n    const updateGame = () => {\n        // Update player position, bullets, and asteroids\n        // Handle collisions and scoring\n    };\n\n    const handleCollision = () => {\n        // Logic for handling collisions between bullets and asteroids\n    };\n\n    return (\n        <div>\n            {/* Render player, asteroids, and bullets */}\n            <h1>Score: {score}</h1>\n        </div>\n    );\n};\n\nexport default GameEngine;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,uBAAuB,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC;IAAES,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EACjE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACZ,MAAMe,gBAAgB,GAAGd,uBAAuB,CAAC,CAAC;IAClDW,YAAY,CAACG,gBAAgB,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB;IACA;EAAA,CACH;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1B;EAAA,CACH;EAED,oBACId,OAAA;IAAAe,QAAA,eAEIf,OAAA;MAAAe,QAAA,GAAI,SAAO,EAACL,KAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd,CAAC;AAACjB,EAAA,CAzBID,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}