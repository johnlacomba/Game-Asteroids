{"ast":null,"code":"var _jsxFileName = \"/Users/jlacomba/Game-Asteroids/react-asteroids-game/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Player from './Player';\nimport Asteroid from './Asteroid';\nimport { handleInput } from '../core/inputController';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const bulletsRef = useRef([]);\n  const asteroidsRef = useRef([]);\n  const playerRef = useRef(null);\n  const canShootRef = useRef(true);\n  const [gameOver, setGameOver] = useState(false);\n\n  // Helper function for collision detection\n  const checkCollision = (obj1, obj2) => {\n    const dx = obj1.position.x - obj2.position.x;\n    const dy = obj1.position.y - obj2.position.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance < obj1.radius + obj2.radius;\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Initialize Player\n    const player = new Player({\n      position: {\n        x: canvas.width / 2,\n        y: canvas.height / 2\n      }\n    });\n    playerRef.current = player;\n\n    // Initialize Asteroids\n    const safeRadius = 200; // The radius around the player where asteroids won't spawn\n    for (let i = 0; i < 5; i++) {\n      let asteroidPosition;\n      let isSafe = false;\n      while (!isSafe) {\n        asteroidPosition = {\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height\n        };\n        const dx = asteroidPosition.x - player.position.x;\n        const dy = asteroidPosition.y - player.position.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance > safeRadius) {\n          isSafe = true;\n        }\n      }\n      asteroidsRef.current.push(new Asteroid({\n        position: asteroidPosition\n      }));\n    }\n    let animationFrameId;\n    const gameLoop = () => {\n      if (!playerRef.current || playerRef.current.delete) {\n        setGameOver(true);\n        window.cancelAnimationFrame(animationFrameId);\n        return;\n      }\n      const keys = handleInput();\n      const player = playerRef.current;\n\n      // Handle shooting\n      if (keys[' '] && canShootRef.current) {\n        bulletsRef.current.push(player.shoot());\n        canShootRef.current = false;\n      }\n      if (!keys[' ']) {\n        canShootRef.current = true;\n      }\n      context.fillStyle = 'black';\n      context.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Update and draw player\n      player.update(keys, canvas.width, canvas.height);\n      player.draw(context);\n\n      // Update and draw asteroids\n      asteroidsRef.current.forEach(asteroid => asteroid.update(canvas.width, canvas.height));\n      asteroidsRef.current.forEach(asteroid => asteroid.draw(context));\n\n      // Update and draw bullets\n      bulletsRef.current.forEach(bullet => bullet.update(canvas.width, canvas.height));\n      bulletsRef.current.forEach(bullet => bullet.draw(context));\n\n      // Collision Detection: Bullets with Asteroids\n      bulletsRef.current.forEach(bullet => {\n        asteroidsRef.current.forEach(asteroid => {\n          if (checkCollision(bullet, asteroid)) {\n            bullet.delete = true;\n            asteroid.hit();\n          }\n        });\n      });\n\n      // Collision Detection: Player with Asteroids\n      asteroidsRef.current.forEach(asteroid => {\n        if (checkCollision(player, asteroid)) {\n          player.destroy();\n        }\n      });\n\n      // Handle asteroid splitting\n      const newAsteroids = [];\n      asteroidsRef.current.forEach(asteroid => {\n        // Check if a large asteroid is destroyed\n        if (asteroid.delete && asteroid.radius >= 50) {\n          // Split into two smaller asteroids\n          newAsteroids.push(new Asteroid({\n            position: {\n              ...asteroid.position\n            },\n            size: asteroid.radius / 2\n          }));\n          newAsteroids.push(new Asteroid({\n            position: {\n              ...asteroid.position\n            },\n            size: asteroid.radius / 2\n          }));\n        }\n      });\n\n      // Remove deleted items and add new ones\n      bulletsRef.current = bulletsRef.current.filter(b => !b.delete);\n      asteroidsRef.current = asteroidsRef.current.filter(a => !a.delete).concat(newAsteroids);\n      animationFrameId = window.requestAnimationFrame(gameLoop);\n    };\n    gameLoop();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        color: 'white',\n        fontSize: '48px',\n        textAlign: 'center'\n      },\n      children: \"GAME OVER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Game, \"fO8jgUe4uJO42odWggleSouvH0c=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Player","Asteroid","handleInput","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","canvasRef","bulletsRef","asteroidsRef","playerRef","canShootRef","gameOver","setGameOver","checkCollision","obj1","obj2","dx","position","x","dy","y","distance","Math","sqrt","radius","canvas","current","context","getContext","width","window","innerWidth","height","innerHeight","player","safeRadius","i","asteroidPosition","isSafe","random","push","animationFrameId","gameLoop","delete","cancelAnimationFrame","keys","shoot","fillStyle","fillRect","update","draw","forEach","asteroid","bullet","hit","destroy","newAsteroids","size","filter","b","a","concat","requestAnimationFrame","children","style","top","left","transform","color","fontSize","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/jlacomba/Game-Asteroids/react-asteroids-game/src/components/Game.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Player from './Player';\nimport Asteroid from './Asteroid';\nimport { handleInput } from '../core/inputController';\n\nconst Game = () => {\n  const canvasRef = useRef(null);\n  const bulletsRef = useRef([]);\n  const asteroidsRef = useRef([]);\n  const playerRef = useRef(null);\n  const canShootRef = useRef(true);\n  const [gameOver, setGameOver] = useState(false);\n\n  // Helper function for collision detection\n  const checkCollision = (obj1, obj2) => {\n    const dx = obj1.position.x - obj2.position.x;\n    const dy = obj1.position.y - obj2.position.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance < obj1.radius + obj2.radius;\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    // Initialize Player\n    const player = new Player({\n      position: { x: canvas.width / 2, y: canvas.height / 2 },\n    });\n    playerRef.current = player;\n\n    // Initialize Asteroids\n    const safeRadius = 200; // The radius around the player where asteroids won't spawn\n    for (let i = 0; i < 5; i++) {\n      let asteroidPosition;\n      let isSafe = false;\n      while (!isSafe) {\n        asteroidPosition = {\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n        };\n\n        const dx = asteroidPosition.x - player.position.x;\n        const dy = asteroidPosition.y - player.position.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        if (distance > safeRadius) {\n          isSafe = true;\n        }\n      }\n      asteroidsRef.current.push(new Asteroid({\n        position: asteroidPosition\n      }));\n    }\n\n    let animationFrameId;\n\n    const gameLoop = () => {\n      if (!playerRef.current || playerRef.current.delete) {\n        setGameOver(true);\n        window.cancelAnimationFrame(animationFrameId);\n        return;\n      }\n\n      const keys = handleInput();\n      const player = playerRef.current;\n\n      // Handle shooting\n      if (keys[' '] && canShootRef.current) {\n        bulletsRef.current.push(player.shoot());\n        canShootRef.current = false;\n      }\n      if (!keys[' ']) {\n        canShootRef.current = true;\n      }\n\n      context.fillStyle = 'black';\n      context.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Update and draw player\n      player.update(keys, canvas.width, canvas.height);\n      player.draw(context);\n\n      // Update and draw asteroids\n      asteroidsRef.current.forEach(asteroid => asteroid.update(canvas.width, canvas.height));\n      asteroidsRef.current.forEach(asteroid => asteroid.draw(context));\n\n      // Update and draw bullets\n      bulletsRef.current.forEach(bullet => bullet.update(canvas.width, canvas.height));\n      bulletsRef.current.forEach(bullet => bullet.draw(context));\n\n      // Collision Detection: Bullets with Asteroids\n      bulletsRef.current.forEach(bullet => {\n        asteroidsRef.current.forEach(asteroid => {\n          if (checkCollision(bullet, asteroid)) {\n            bullet.delete = true;\n            asteroid.hit();\n          }\n        });\n      });\n\n      // Collision Detection: Player with Asteroids\n      asteroidsRef.current.forEach(asteroid => {\n        if (checkCollision(player, asteroid)) {\n          player.destroy();\n        }\n      });\n\n      // Handle asteroid splitting\n      const newAsteroids = [];\n      asteroidsRef.current.forEach(asteroid => {\n        // Check if a large asteroid is destroyed\n        if (asteroid.delete && asteroid.radius >= 50) {\n          // Split into two smaller asteroids\n          newAsteroids.push(new Asteroid({\n            position: { ...asteroid.position },\n            size: asteroid.radius / 2\n          }));\n          newAsteroids.push(new Asteroid({\n            position: { ...asteroid.position },\n            size: asteroid.radius / 2\n          }));\n        }\n      });\n\n      // Remove deleted items and add new ones\n      bulletsRef.current = bulletsRef.current.filter(b => !b.delete);\n      asteroidsRef.current = asteroidsRef.current.filter(a => !a.delete).concat(newAsteroids);\n\n      animationFrameId = window.requestAnimationFrame(gameLoop);\n    };\n\n    gameLoop();\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n\n  return (\n    <>\n      {gameOver && (\n        <div style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', color: 'white', fontSize: '48px', textAlign: 'center' }}>\n          GAME OVER\n        </div>\n      )}\n      <canvas ref={canvasRef} />\n    </>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}