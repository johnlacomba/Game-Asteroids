{"ast":null,"code":"export default class UFO {\n  constructor(args) {\n    this.position = args.position;\n    this.velocity = args.velocity;\n    this.radius = 25;\n    this.delete = false;\n\n    // For the winding path\n    this.pathPhase = Math.random() * 2 * Math.PI; // Random start in the sine wave\n    this.pathAmplitude = Math.random() * 3 + 2; // How much it winds\n    this.pathFrequency = 0.05; // How fast it winds\n\n    // UFO shape (dome + saucer)\n    this.shape = [{\n      x: -this.radius,\n      y: 0\n    }, {\n      x: -this.radius / 2,\n      y: -this.radius / 3\n    }, {\n      x: this.radius / 2,\n      y: -this.radius / 3\n    }, {\n      x: this.radius,\n      y: 0\n    }, {\n      x: this.radius * 0.7,\n      y: this.radius / 2\n    }, {\n      x: -this.radius * 0.7,\n      y: this.radius / 2\n    }];\n  }\n  getPolygon() {\n    // No rotation for the UFO, just translation\n    return this.shape.map(point => ({\n      x: point.x + this.position.x,\n      y: point.y + this.position.y\n    }));\n  }\n  destroy() {\n    this.delete = true;\n  }\n  update(width, height) {\n    // Calculate the perpendicular vector to the velocity for the sine wave\n    const perpendicular = {\n      x: -this.velocity.y,\n      y: this.velocity.x\n    };\n    const perpendicularMag = Math.sqrt(perpendicular.x * perpendicular.x + perpendicular.y * perpendicular.y);\n    const normalizedPerpendicular = {\n      x: perpendicular.x / perpendicularMag,\n      y: perpendicular.y / perpendicularMag\n    };\n\n    // Calculate the winding offset\n    const offset = Math.sin(this.pathPhase) * this.pathAmplitude;\n    this.pathPhase += this.pathFrequency;\n\n    // Update position with base velocity and winding offset\n    this.position.x += this.velocity.x + normalizedPerpendicular.x * offset;\n    this.position.y += this.velocity.y + normalizedPerpendicular.y * offset;\n\n    // Check if UFO is way off-screen to be deleted\n    const margin = this.radius * 2;\n    if (this.position.x < -margin || this.position.x > width + margin || this.position.y < -margin || this.position.y > height + margin) {\n      this.delete = true;\n    }\n  }\n  draw(context) {\n    context.save();\n    context.translate(this.position.x, this.position.y);\n    context.strokeStyle = '#ffffff';\n    context.lineWidth = 2;\n    context.beginPath();\n    context.moveTo(this.shape[0].x, this.shape[0].y);\n    for (let i = 1; i < this.shape.length; i++) {\n      context.lineTo(this.shape[i].x, this.shape[i].y);\n    }\n    context.closePath();\n    context.stroke();\n    context.restore();\n  }\n}","map":{"version":3,"names":["UFO","constructor","args","position","velocity","radius","delete","pathPhase","Math","random","PI","pathAmplitude","pathFrequency","shape","x","y","getPolygon","map","point","destroy","update","width","height","perpendicular","perpendicularMag","sqrt","normalizedPerpendicular","offset","sin","margin","draw","context","save","translate","strokeStyle","lineWidth","beginPath","moveTo","i","length","lineTo","closePath","stroke","restore"],"sources":["/Users/jlacomba/Game-Asteroids/react-asteroids-game/src/components/UFO.js"],"sourcesContent":["export default class UFO {\n  constructor(args) {\n    this.position = args.position;\n    this.velocity = args.velocity;\n    this.radius = 25;\n    this.delete = false;\n\n    // For the winding path\n    this.pathPhase = Math.random() * 2 * Math.PI; // Random start in the sine wave\n    this.pathAmplitude = Math.random() * 3 + 2;   // How much it winds\n    this.pathFrequency = 0.05;                    // How fast it winds\n\n    // UFO shape (dome + saucer)\n    this.shape = [\n      { x: -this.radius, y: 0 },\n      { x: -this.radius / 2, y: -this.radius / 3 },\n      { x: this.radius / 2, y: -this.radius / 3 },\n      { x: this.radius, y: 0 },\n      { x: this.radius * 0.7, y: this.radius / 2 },\n      { x: -this.radius * 0.7, y: this.radius / 2 },\n    ];\n  }\n\n  getPolygon() {\n    // No rotation for the UFO, just translation\n    return this.shape.map(point => ({\n      x: point.x + this.position.x,\n      y: point.y + this.position.y,\n    }));\n  }\n\n  destroy() {\n    this.delete = true;\n  }\n\n  update(width, height) {\n    // Calculate the perpendicular vector to the velocity for the sine wave\n    const perpendicular = { x: -this.velocity.y, y: this.velocity.x };\n    const perpendicularMag = Math.sqrt(perpendicular.x * perpendicular.x + perpendicular.y * perpendicular.y);\n    const normalizedPerpendicular = {\n      x: perpendicular.x / perpendicularMag,\n      y: perpendicular.y / perpendicularMag,\n    };\n\n    // Calculate the winding offset\n    const offset = Math.sin(this.pathPhase) * this.pathAmplitude;\n    this.pathPhase += this.pathFrequency;\n\n    // Update position with base velocity and winding offset\n    this.position.x += this.velocity.x + normalizedPerpendicular.x * offset;\n    this.position.y += this.velocity.y + normalizedPerpendicular.y * offset;\n\n    // Check if UFO is way off-screen to be deleted\n    const margin = this.radius * 2;\n    if (\n      this.position.x < -margin ||\n      this.position.x > width + margin ||\n      this.position.y < -margin ||\n      this.position.y > height + margin\n    ) {\n      this.delete = true;\n    }\n  }\n\n  draw(context) {\n    context.save();\n    context.translate(this.position.x, this.position.y);\n    context.strokeStyle = '#ffffff';\n    context.lineWidth = 2;\n    context.beginPath();\n    context.moveTo(this.shape[0].x, this.shape[0].y);\n    for (let i = 1; i < this.shape.length; i++) {\n      context.lineTo(this.shape[i].x, this.shape[i].y);\n    }\n    context.closePath();\n    context.stroke();\n    context.restore();\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}